plugins {
    id "java-library"
    id "kotlin"
    id "kotlin-kapt"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    // Business logic libs
    implementation project(":libtvprovider")
    implementation project(":libtvprovider-kinox")
    implementation project(":libtvprovider-primewire")
    implementation project(":libwebdriver")
    implementation project(":libtvvideoextractor")
    implementation project(":libtmdb")
    implementation project(":libopensubtitles")

    // Arrow
    implementation "io.arrow-kt:arrow-core:0.13.2"

    // Ktor
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"

    // Retrofit and Moshi
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    // DI
    implementation "javax.inject:javax.inject:1"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Store
    implementation "com.dropbox.mobile.store:store4:4.0.3-KT15"

    // Testing
    def junit_jupiter_version = "5.8.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.platform:junit-platform-suite:1.8.1"
    testImplementation "org.mockito:mockito-core:4.0.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "org.slf4j:slf4j-simple:$slf4j_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
}